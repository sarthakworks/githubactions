name: Code Review (Static Analysis)

on:
  pull_request:
    branches: [main, develop]  # Customize branches

jobs:
  code_review:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language: [python, javascript] # Add more languages as needed

    steps:
      - uses: actions/checkout@v3

      - name: Set up ${{ matrix.language }}
        if: matrix.language == 'python'
        uses: actions/setup-python@v4
        with:
          python-version: '3.9' # Or your preferred version

      - name: Set up Node.js
        if: matrix.language == 'javascript'
        uses: actions/setup-node@v3
        with:
          node-version: 16 # Or your preferred version

      - name: Install dependencies (${{ matrix.language }})
        if: matrix.language == 'python'
        run: pip install flake8 pylint # Add more Python linters

      - name: Install dependencies (${{ matrix.language }})
        if: matrix.language == 'javascript'
        run: npm install eslint # Add more JavaScript linters

      - name: Run linters (${{ matrix.language }})
        if: matrix.language == 'python'
        run: |
          flake8 . > flake8_results.txt
          pylint . > pylint_results.txt

      - name: Run linters (${{ matrix.language }})
        if: matrix.language == 'javascript'
        run: eslint . > eslint_results.txt

      - name: Post results as comment (${{ matrix.language }})
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs').promises;
            let results = "";

            if ("${{ matrix.language }}" === "python") {
              try { results += "## Flake8 Results\n\n\`\`\`\n" + await fs.readFile('flake8_results.txt', 'utf8') + "\n\`\`\`\n\n"; } catch (e) {}
              try { results += "## Pylint Results\n\n\`\`\`\n" + await fs.readFile('pylint_results.txt', 'utf8') + "\n\`\`\`\n\n"; } catch (e) {}
            } else if ("${{ matrix.language }}" === "javascript") {
              try { results += "## ESLint Results\n\n\`\`\`\n" + await fs.readFile('eslint_results.txt', 'utf8') + "\n\`\`\`\n\n"; } catch (e) {}
            }

            if (results) { // Only post if there are results to avoid empty comments
              return github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: results
              });
            }